'''

        Подвиг 7. На вход программе подаются оценки студента (целые числа от 2 до 5), записанные в одну
        строчку через пробел. Все эти оценки читаются и сохраняются в список с помощью следующей команды
        (прописать в программе):

        marks = list(map(int, input().split()))

        Необходимо вычислить средний балл списка marks и вывести его на экран с точностью до десятых
        (один знак после запятой).


        Sample Input:

        3 3 2 4 4 5 4 3 2
        Sample Output:

        3.3
        Напишите программу.

'''

# put your python code here

marks = list(map(int, input().split()))

print(round(sum(marks)/len(marks), 1))



'''
        Подвиг 8. На вход программе подаются следующие данные по книге (каждое значение с новой строки):

        название (строка);
        автор (строка);
        число страниц (целое число);
        цена (вещественное число).
        
        Необходимо прочитать эти данные и сохранить в списке book в порядке их чтения. Затем, из этого 
        списка удалить 3-й элемент (число страниц), в качестве автора записать "Пушкин", а цену увеличить в 2 раза. 
        Результат (список book) вывести на экран командой:
        
        print(book)
        
        Sample Input:
        
        Мастер и Маргарита
        Булгаков
        233
        435.45
        Sample Output:
        
        ['Мастер и Маргарита', 'Пушкин', 870.9]
'''

name = input()
author = input()
number_of_pages = int(input())
price = float(input())

book = [name] + [author] + [number_of_pages] + [price]

del book[2]
book[1] = "Пушкин"
book[2] = price * 2
print(book)


'''
        Подвиг 9. На вход программе подается строка с числами новых подписчиков канала по дням, записанных 
        в одну строку через пробел. Необходимо прочитать эти числа и сохранить в списке, как целые числа в 
        порядке их следования в строке. Затем, вывести через пробел на экран максимальное, минимальное 
        и суммарное значения этого списка.

        Sample Input:
        
        52 65 64 54 68 59 42 63
        Sample Output:
        
        68 42 467

'''

lst = list(map(int, input().split()))

print(f"{max(lst)} {min(lst)} {sum(lst)}")


'''
        Подвиг 10. На вход программе подается строка с числами новых подписчиков канала по дням, 
        записанных в одну строку через пробел. Необходимо прочитать эти числа и сохранить в списке lst, 
        как целые числа в порядке их следования в строке. Затем, отсортировать элементы этого списка 
        по убыванию и результат вывести на экран командой:

        print(*lst)
        Sample Input:
        
        52 65 64 54 68 59 42 63
        Sample Output:
        
        68 65 64 63 59 54 52 42
'''

# lst = list(map(int, input().split()))
# lst.sort(reverse=True)
# print(*lst)


'''
        Подвиг 12. На вход программе подается строка, содержащая названия городов, записанных через пробел. 
        Необходимо прочитать эту строку и на ее основе создать список lst из названий городов, 
        добавив в его начало список cities:

        cities = ["Москва", "Тверь", "Вологда"]
        Выведите полученный список lst на экран командой:
        
        print(*lst)
        Sample Input:
        
        Уфа Казань Севастополь
        Sample Output:
        
        Москва Тверь Вологда Уфа Казань Севастополь
'''

lst = list(map(str, input().split()))
cities = ["Москва", "Тверь", "Вологда"]
lst = cities + lst
print(*lst)


'''
        Подвиг 13. На вход программе подается строка, содержащая названия городов, записанных через пробел. 
        Необходимо прочитать эту строку и на ее основе сформировать список lst из названий городов, 
        добавив в его конец список cities:

        cities = ["Москва", "Тверь", "Вологда"]
         Выведите полученный список lst на экран командой:
        
        print(*lst)
        Sample Input:
        
        Уфа Казань Севастополь
        Sample Output:
        
        Уфа Казань Севастополь Москва Тверь Вологда
'''

lst = list(map(str, input().split()))
cities = ["Москва", "Тверь", "Вологда"]
lst = lst + cities
print(*lst)