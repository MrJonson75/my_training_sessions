'''
        Подвиг 1.

        На вход программе подаются целые числа, записанные через пробел.
        Необходимо их прочитать и определить, являются ли все эти числа четными.
        Вывести True, если это так и False в противном случае.

        Задачу реализовать с использованием одной из функций: any или all.


        Sample Input:

        2 4 6 8 22 56
        Sample Output:

        True
'''
import sys

s = '2 4 7 8 22 56'

print(all(map(lambda x: x % 2 == 0, map(int, s.split()))))



'''
        Подвиг 2. 
        
        На вход программе подаются вещественные числа, записанные через пробел. 
        Необходимо их прочитать и определить, есть ли среди них хотя бы одно отрицательное. 
        Вывести True, если это так и False в противном случае.

        Задачу реализовать с использованием одной из функций: any или all.

        
        Sample Input:
        
        8.2 -11.0 20 3.4 -1.2
        Sample Output:
        
        True
'''

s = '8.2 11.0 20 3.4 1.2'

print(any(map(lambda x: x < 0, map(float, s.split()))))


'''
        Подвиг 3. 
        
        В программе объявите функцию с именем is_string следующей сигнатуры:

        def is_string(lst): ...
        Функции передается (через параметр lst) коллекция (список, кортеж, множество). 
        Функция должна возвращать True, если все элементы коллекции lst - строки и False в противном случае.
        
        Вызывать функцию не нужно, только объявить. 
        Также ничего не нужно выводить на экран. 
        Задачу реализовать с использованием одной из функций: any или all.
'''


def is_string(lst):
    return all(map(lambda x: type(x) == str, lst))




'''
        Подвиг 4. 
        
        На вход программе подаются оценки студента, записанные через пробел. 
        Необходимо их прочитать и определить, имеется ли в этом списке хотя бы одна оценка ниже тройки. 
        Если это так, то вывести на экран строку "отчислен", иначе - "учится".

        Задачу реализовать с использованием одной из функций: any или all.
        
        Sample Input:
        
        3 3 3 2 3 3
        Sample Output:
        
        отчислен
'''

s = '3 5 3 4 3 1'

print("отчислен" if any(map(lambda x: x < 3, map(int, s.split()))) else "учится")



'''
        Подвиг 5. 
        
        На вход программе подается текущее игровое поле для игры "Крестики-нолики" 
        в виде следующей таблицы (списка строк):

        # x o
        x # x
        o o #
        
        Здесь # - свободная клетка. В программе уже реализовано чтение этих строк и сохранение в список lst_in:
        
        lst_in = list(map(str.strip, sys.stdin.readlines()))
        Необходимо преобразовать этот список строк в двумерный список с именем pole вида (пример):
        
        [ ['#', 'x', 'o'], ['x', '#', 'x'], ['o', 'o', '#'] ]
        
        Объявите в программе функцию с именем is_free сигнатуры:
        
        def is_free(lst): ...
        На вход этой функции подается игровое поле в виде двумерного (вложенного) списка. 
        Данная функция должна возвращать True, если есть хотя бы одна свободная клетка и False в противном случае.
        
        Вызывать функцию не нужно, только определить. 
        Также ничего не нужно выводить на экран. 
        Задачу реализовать с использованием одной из функций: any или all.
'''
lst_in = ['# x o', 'x # x', 'o o #']


pole = [i.split() for i in lst_in]


def is_free(lst):
    return any(map(lambda x: x == '#', [i for j in lst for i in j]))


print(is_free(pole))