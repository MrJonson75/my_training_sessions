
'''
        Подвиг 1.

        На вход программе подается строка с названиями городов, записанных через пробел.
        Необходимо прочитать эту строку и применить функцию filter, которая бы возвращала только
        названия длиной более 5 символов.
        Извлеките первые три полученных значения с помощью функции next и отобразите их на
        экране в одну строчку через пробел.
        (Полагается, что минимум три значения имеются).

        Sample Input:

        Тула Ульяновск Хабаровск Владивосток Омск Уфа
        Sample Output:

        Ульяновск Хабаровск Владивосток
'''

s = 'Тула Ульяновск Хабаровск Владивосток Омск Уфа'

filtered = filter(lambda x: len(x) > 5, s.split())
print(next(filtered), next(filtered), next(filtered))





'''
        Подвиг 2. 
        
        На вход программе подается список предметов в виде строк формата:
        
        название_1=вес_1
        ...
        название_N=вес_N
        
        В программе уже реализовано их считывание в список lst_in:
        
        lst_in = list(map(str.strip, sys.stdin.readlines()))
        С помощью функции map, необходимо сначала преобразовать этот список строк в кортеж, 
        элементами которого также являются кортежи, то есть, представить список в формате:
        
        (('название_1', 'вес_1'), ..., ('название_N', 'вес_N'))
        
        А, затем, отфильтровать (исключить) все предметы с весом менее 500, 
        используя функцию filter. Вывести на экран список оставшихся предметов (только их названия) 
        в одну строчку через пробел в порядке их следования во входных данных.
        
        Sample Input:
        
        зонт=1000
        палатка=10000
        спички=22
        котелок=543
        Sample Output:
        
        зонт палатка котелок
'''

lst_in = ['зонт=1000',
          'палатка=10000',
          'спички=22',
          'котелок=543']


print(*[i[0] for i in list(filter(lambda x: int(x[1]) > 500 ,tuple(tuple(i.split('=')) for i in lst_in)))])

tp = tuple(map(lambda x: tuple(x.split('=')), lst_in))
print(tp)



'''
        Подвиг 3. 
        
        На вход программе подаются целые числа, записанные через пробел. 
        Необходимо их прочитать и оставить среди них только двузначные числа. 
        Реализовать программу с использованием функции filter. 
        Результат отобразить на экране в виде последовательности оставшихся чисел в одну строчку через пробел.
        
        Sample Input:
        
        8 11 0 -23 140 1
        Sample Output:
        
        11 -23
'''

s = '8 11 0 -23 140 1'

print(*filter(lambda x: len(x.replace("-", "")) == 2, s.split()))





'''
        Подвиг 4. 
        
        Саша и Галя коллекционируют монетки. 
        Каждый из них решил записать номиналы монеток из своей коллекции. 
        Получились две последовательности. 
        Эти последовательности чисел (номиналов) поступают на вход программе в виде двух строк из целых чисел,
        записанных через пробел. 
        Необходимо их прочитать и выделить значения, присутствующие в обоих списках, 
        а затем, оставить среди них только четные. 
        Результат вывести на экран в виде строки полученных чисел в порядке их возрастания через пробел.

        При реализации программы используйте функцию filter и кое-что еще (для упрощения программы), 
        подумайте что.
        
        Sample Input:
        
        1 5 2 7 10 25 50 100
        5 2 3 7 10 25 55
        Sample Output:
        
        2 10
'''
s1 = '1 5 2 7 10 25 55 100'
s2 = '5 2 3 7 10 25 55'
print(*sorted(filter(lambda x: x % 2 == 0, set(map(int, s1.split())) & set(map(int, s2.split())))))

a, b = map(str.split, (s1, s2))

print(*filter(lambda a: int(a) % 2 == 0, set(a)&set(b)))




'''
        Подвиг 5. 
        
        На вход программе подается строка с email-адресами, записанных через пробел. 
        Нужно прочитать эту строку и среди email-адресов оставить только корректно записанные адреса. 
        Полагается, что к таким относятся те, что используют только латинские буквы, цифры и символ подчеркивания. 
        Также в адресе должен быть символ "@", а после него символ точки "." 
        (между ними, конечно же, могут быть и другие символы).

        Результат отобразить в виде строки email-адресов, записанных через пробел в порядке их следования 
        в исходной строке.
        
        Sample Input:
        
        abc@it.ru dfd3.ru@mail biba123@list.ru sc_lib@list.ru $fg9@fd.com
        Sample Output:
        
        abc@it.ru biba123@list.ru sc_lib@list.ru
        Напишите программу. Тестируется через stdi
'''

from string import ascii_letters, digits

def check_email(email):
    t = ascii_letters + digits + '@._'
    if (email.count('@') == 1
            and email.count('.') == 1
            and email.index('@') < email.index('.'))\
            and ' ' not in email:
        for i in email:
            if i not in t:
                return False
        return True
    else:
        return False

s = ' abc@it.ru dfd3.ru@mail biba123@list.ru sc_lib@list.ru $fg9@fd.com'

print(*filter(lambda x: check_email(x), s.split()))

fil = filter(lambda adress:
             '@' in adress and
             '.' in adress and
             all(i in ascii_letters + digits + '@._' for i in adress) and
             adress.find('@') < adress.find('.'), s.split())

print(*fil)