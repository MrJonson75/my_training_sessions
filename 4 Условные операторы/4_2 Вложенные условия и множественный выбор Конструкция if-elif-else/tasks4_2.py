'''

        Подвиг 1. Объявите в программе следующую многострочную переменную (меню):


        Эту строку можно разбить на отдельные строки, если вы видите в этом необходимость.

        Далее, на вход программы подается целое число от 1 до 6. Необходимо его прочитать и
        вывести пункт меню, связанный с этим числом. Реализовать программу
        с использованием операторов if-elif

        Sample Input:

        2
        Sample Output:

        2. Строки и списки
'''


# m = '''1. Введение в Python
#         2. Строки и списки
#         3. Условные операторы
#         4. Циклы
#         5. Словари, кортежи и множества
#         6. Выход'''

# menu = input()
#
# if menu == '1':
#     print(m[m.find(menu):m.find("\n")])
# elif menu == '2':
#     print(m[m.find(menu):m.find("\n", m.find(menu))])
# elif menu == '3':
#     print(m[m.find(menu):m.find("\n", m.find(menu))])
# elif menu == '4':
#     print(m[m.find(menu):m.find("\n", m.find(menu))])
# elif menu == '5':
#     print(m[m.find(menu):m.find("\n", m.find(menu))])
# elif menu == '6':
#     print(m[m.find(menu):])




'''
        Подвиг 2. 
        
        На вход программе подаются три целых числа, записанных в одну строку через пробел. 
        Необходимо прочитать их и определить наименьшее среди прочитанных чисел. 
        Наименьшее найденное значение вывести на экран.

        P.S. Программу реализовать следует, используя условный оператор, без использования функции min.
        
        
        Sample Input:
        
        8 11 -1
        Sample Output:
        
        -1
'''

# a, b, c = map(int, input().split())
#
# if a > b:
#     if a > c:
#         print(a)
#     else:
#         print(c)
# else:
#     if b > c:
#         print(b)
#     else:
#         print(c)




'''
        Подвиг 3. 
        
        На вход программе подается вещественное число: 
        вес боксера-любителя (в кг). 
        Прочитайте это число и определите номер категории, в которой будет выступать боксер.

        Боксер может быть отнесен к одной из следующих весовых категорий:
        
            1) легкий вес – до 60 кг (включительно);
            2) первый полусредний вес – до 64 кг (включительно);
            3) полусредний вес – до 69 кг (включительно);
            4) остальные - более 69 кг.
        
    
        Sample Input:
        
        62.4
        Sample Output:

        2
'''

# weight = float(input())
#
# if weight <= 60:
#     print(1)
# elif 60 < weight <= 64:
#     print(2)
# elif 64 < weight <= 69:
#     print(3)
# elif weight > 69:
#     print(4)



'''
        Подвиг 6. 
        
        На вход программе подаются два целых числа, записанных через пробел. 
        Необходимо прочитать эти числа по порядку в переменные m (порядковый номер месяца) 
        и n (число, день месяца). Затем, по переменным m и n определить:

            а) дату предыдущего дня (принять, что m и n не могут являться 1 января);
            б) дату следующего дня (принять, что m и n не могут являться 31 декабря).

        В задаче принять, что год не является високосным. 
        Вывести предыдущую дату и следующую дату 
        (в формате: mm.dd, где m - число месяца; d - номер дня) 
        в одну строчку через пробел.

        P.S. Число дней в месяцах не високосного года, начиная с января: 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31



        Sample Input:
        
        8 31
        Sample Output:
        
        08.30 09.01
'''

# m, n = map(int, input().split())
#
# if m == 1 or m == 3 or m == 5 or m == 7 or m == 8 or m == 10 or m == 12:
#     if 1 < n < 31:
#         print(f'{str(m).rjust(2, '0')}.{str(n-1).rjust(2, "0")} '
#               f'{str(m).rjust(2, '0')}.{str(n+1).rjust(2, "0")}'
#               )
#     elif n == 31:
#         print(f'{str(m).rjust(2, '0')}.{str(n-1).rjust(2, "0")} '
#               f'{str(m + 1).rjust(2, '0')}.01'
#               )
#     else:
#         if m == 1:
#             print(f'12.31 01.{str(n+1).rjust(2, "0")}')
#         elif m == 3:
#             print(f'02.28 03.{str(n + 1).rjust(2, "0")}')
#         elif m == 8:
#             print(f'07.31 08.{str(n + 1).rjust(2, "0")}')
#         else:
#             print(f'{str(m - 1).rjust(2, '0')}.30 '
#                   f'{str(m).rjust(2, '0')}.{str(n + 1).rjust(2, "0")}'
#                   )
# elif m == 2:
#     if 1 < n < 28:
#         print(f'{str(m).rjust(2, '0')}.{str(n - 1).rjust(2, "0")} '
#               f'{str(m).rjust(2, '0')}.{str(n + 1).rjust(2, "0")}'
#               )
#     elif n == 28:
#         print(f'{str(m).rjust(2, '0')}.{str(n - 1).rjust(2, "0")} '
#               f'{str(m + 1).rjust(2, '0')}.01'
#               )
#     else:
#         print(f'{str(m - 1).rjust(2, '0')}.31 '
#               f'{str(m).rjust(2, '0')}.{str(n + 1).rjust(2, "0")}'
#               )
# else:
#     if 1 < n < 30:
#         print(f'{str(m).rjust(2, '0')}.{str(n - 1).rjust(2, "0")} '
#               f'{str(m).rjust(2, '0')}.{str(n + 1).rjust(2, "0")}'
#               )
#     elif n == 30:
#         print(f'{str(m).rjust(2, '0')}.{str(n - 1).rjust(2, "0")} '
#               f'{str(m + 1).rjust(2, '0')}.01'
#               )
#     else:
#         print(f'{str(m - 1).rjust(2, '0')}.31 '
#               f'{str(m).rjust(2, '0')}.{str(n + 1).rjust(2, "0")}'
#               )



'''
        Подвиг 7. 
        
        На вход программе подается целое число k (1 <= k <= 365). 
        Прочитайте это число и определите, каким днем недели 
        
        (понедельник, вторник, среда, четверг, пятница, суббота или воскресенье) 
        является k-й день не високосного года, в котором 1 января является понедельником.


        Sample Input:
        
        121
        Sample Output:
        
        вторник
'''


days = ["понедельник", "вторник", "среда", "четверг", "пятница", "суббота", "воскресенье"]
day_number = int(input())
ind = day_number % 7
day = days[ind - 1]
print(f"{day}")