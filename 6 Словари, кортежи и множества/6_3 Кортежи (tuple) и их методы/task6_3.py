
'''

        Подвиг 3.
        Объявите в программе следующий кортеж:

        t = (3.4, -56.7)
        На вход программе подается последовательность целых чисел, записанных через пробел.
        Необходимо их прочитать и добавить в конец кортежа t.
        Добавленные числа в кортеже должны следовать в порядке их считывания.
        Результат вывести на экран командой:

        print(t)

        Sample Input:

        8 11 -5 2
        Sample Output:

        (3.4, -56.7, 8, 11, -5, 2)
'''


t = (3.4, -56.7)

t += tuple(map(int, input().split()))

print(t)







'''
        Подвиг 4. 
        
        На вход программе подается строка с названиями городов, записанных через пробел. 
        Необходимо прочитать эту строку и на ее основе сформировать кортеж из названий городов. 
        Названия в кортеже должны идти в том же порядке, что и в исходной строке. 
        Выполните проверку: если в полученном кортеже нет города "Москва", 
        то следует его добавить в конец кортежа. 
        Выведите на экран названия городов из кортежа (по порядку) в одну строчку через пробел.


        Sample Input:
        
        Уфа Казань Самара
        Sample Output:
        
        Уфа Казань Самара Москва
'''

tuple_in = tuple(input().split())
if "Москва" not in tuple_in:
    tuple_in += ("Москва",)
print(*tuple_in)






'''
        Подвиг 5. 
        
        На вход программе подается строка с названиями городов, записанных через пробел. 
        Необходимо прочитать эту строку и на ее основе сформировать кортеж из названий городов. 
        Затем, выполните проверку: 
        
        если в полученном кортеже присутствует город "Ульяновск", 
        то этот элемент следует удалить (создав новый кортеж). 
        Выведите на экран названия городов из итогового кортежа (по порядку) в одну строчку через пробел.
        
        Sample Input:
        
        Воронеж Самара Тольятти Ульяновск Пермь
        Sample Output:
        
        Воронеж Самара Тольятти Пермь
'''


print(*tuple([i for i in tuple(input().split()) if i != "Ульяновск"]))





'''
        Подвиг 6. 
        
        На вход программе подается строка с именами студентов, записанных через пробел. 
        Необходимо прочитать эту строку и на ее основе сформировать кортеж из имен. 
        Затем, отобразите на экране все имена малыми буквами из этого кортежа (по порядку), 
        которые содержат фрагмент "ва" (без учета регистра). 
        Имена выводятся в одну строчку через пробел в нижнем регистре (малыми буквами).

        Sample Input:
        
        Петя Варвара Венера Василиса Василий Федор
        Sample Output:
        
        варвара василиса василий
'''

print(*[i for i in tuple(input().lower().split()) if "ва" in i])






'''
        одвиг 7. 
        
        На вход программе подаются целые числа, записанные в одну строку через пробел. 
        
        Необходимо их прочитать и сохранить в кортеже. 
        Затем, создать еще один кортеж с уникальными (не повторяющимися) значениями из первого кортежа. 
        Уникальные числа должны следовать в том же порядке, что и в исходном кортеже. 
        Отобразите найденные уникальные числа в одну строчку через пробел.

        P. S. Подобные задачи решаются, как правило, с помощью множеств, но в качестве практики пока обойдемся без них.
        
        Sample Input:
        
        8 11 -5 -2 8 11 -5
        Sample Output:
        
        8 11 -5 -2
'''
tuple_in = tuple(map(int, input().split()))
tuple_out = ()
for i in tuple_in:
    if i not in tuple_out:
        tuple_out = tuple_out + (i,)
print(*tuple_out)

# Вариант 2

tuple_in = tuple(map(int, input().split()))
tuple_out = tuple(dict.fromkeys(tuple_in))
print(*tuple_out)






'''
        Подвиг 8. 
        
        На вход программе подаются целые числа, записанные в одну строку через пробел. 
        Необходимо их прочитать и сохранить в кортеже. 
        Затем, в кортеже найти и вывести в одну строчку через пробел (по порядку) 
        все индексы неуникальных (повторяющихся) значений.

        
        Sample Input:
        
        5 4 -3 2 4 5 10 11
        Sample Output:
        
        0 1 4 5
'''

tuple_in = tuple(map(int, input().split()))
lst_out =[]
for i, v in enumerate(tuple_in):
    if tuple_in.count(v) > 1:
        lst_out.append(i)

print(*lst_out)

# Вариант 2
tuple_in = tuple(map(int, input().split()))
print(*[i for i, v in enumerate(tuple_in) if tuple_in.count(v) > 1])





'''
        Подвиг 9. Объявите в программе следующий двумерный кортеж, размером 5 x 5 элементов:

        t = ((1, 0, 0, 0, 0),
             (0, 1, 0, 0, 0),
             (0, 0, 1, 0, 0),
             (0, 0, 0, 1, 0),
             (0, 0, 0, 0, 1))
             
        На вход программе подается натуральное число N (N < 5). 
        Необходимо на основе кортежа t сформировать новый аналогичный кортеж t2 размером N x N 
        элементов путем отбрасывания последних строк и столбцов. 
        
        Результат выведите на экран в виде таблицы чисел.
        
        P.S. Обратите внимание, что в при выводе таблицы в конце строк не должно быть пробелов.
        
        Sample Input:
        
        3
        Sample Output:
        
        1 0 0
        0 1 0
        0 0 1
'''

t = ((1, 0, 0, 0, 0),
     (0, 1, 0, 0, 0),
     (0, 0, 1, 0, 0),
     (0, 0, 0, 1, 0),
     (0, 0, 0, 0, 1))

n = int(input())
t2 = ()
for i in range(n):
    t2 += ((t[i][0:n]),)
for i in t2:
    print(*i)

# вариант 2
t = ((1, 0, 0, 0, 0),
     (0, 1, 0, 0, 0),
     (0, 0, 1, 0, 0),
     (0, 0, 0, 1, 0),
     (0, 0, 0, 0, 1))

n = int(input())
tuple(print(*t[i][0:n]) for i in range(n))





'''
        Подвиг 10. На вход программе подаются строки (пункты меню), каждая с новой строки, в формате:

        название_1 URL-адрес_1
        название_2 URL-адрес_2
        ...
        название_N URL-адрес_N
        
        В программе уже реализовано чтение этих строк и сохранение их в списке:
        
        lst_in = list(map(str.strip, sys.stdin.readlines()))
        Необходимо преобразовать список lst_in так, чтобы получился кортеж menu следующего вида:
        
        ((название_1, URL-адрес_1), (название_2, URL-адрес_2), ... (название_N, URL-адрес_N))
        
        Полученный кортеж вывести на экран командой:
        
        print(menu)
        
        Sample Input:
        
        Главная home
        Python learn-python
        Java learn-java
        PHP learn-php
        Sample Output:
        
        (('Главная', 'home'), ('Python', 'learn-python'), ('Java', 'learn-java'), ('PHP', 'learn-php'))
'''

lst_in =[
    "Главная home",
    "Python learn-python",
    "Java learn-java",
    "PHP learn-php"
]
menu = tuple([tuple(i.split()) for i in lst_in])
print(menu)